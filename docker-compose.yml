services:
  rabbitmq:
    image: rabbitmq:3.13-management  # Yangi versiyaga o'tish
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:  # RabbitMQ tayyorligini tekshirish
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    healthcheck:  # Redis tayyorligini tekshirish
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  src:
    build: ./src
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./src:/app
    ports:
      - "9090:8000"
    env_file:
      - ./.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_worker:
    build: ./src
    command: sh -c "celery -A src.celery worker -l info"
    volumes:
      - ./src:/app
    env_file:
      - ./.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  inventory_service:
    build: ./inventory_service
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./inventory_service:/app
    ports:
      - "8080:8000"
    env_file:
      - ./.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  inventory_consumer:
    build: ./inventory_service
    command: python manage.py run_consumer
    volumes:
      - ./inventory_service:/app
    env_file:
      - ./.env
    depends_on:
      rabbitmq:
        condition: service_healthy

  order_service:
    build: ./order_service
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./order_service:/app
    ports:
      - "8090:8000"
    env_file:
      - ./.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  logistics_service:
    build: ./logistics_service
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./logistics_service:/app
    ports:
      - "9000:8000"
    env_file:
      - ./.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  logistics_consumer:
    build: ./logistics_service
    command: python manage.py run_consumer
    volumes:
      - ./logistics_service:/app
    env_file:
      - ./.env
    depends_on:
      rabbitmq:
        condition: service_healthy

  user_service:
    build: ./user_service
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./user_service:/app
    ports:
      - "9001:8000"
    env_file:
      - ./.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
  frontend:
    build:
      context: ./frontend
    ports:
      - "2380:80"
    # ... qolgan qismi
